@model Exam_Result.Models.ViewModels.ExamResultVM

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var Subjects = ViewBag.SubjectId;
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ExamResult</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.StudentId, "StudentId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StudentId", null, "Select Student", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubjectId, "SubjectId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SubjectId, new SelectList(Subjects, "Id", "SubjectName"), "Select Subject", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="btnSubmit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $('#StudentId').change(function () {
           // Manager.LoadSubjectDDL();

                debugger;
            var studentId = $("#StudentId").val();
            var jsonData = { StudentId: studentId };

                $.ajax(
                    {
                        url: "/SubjectAssign/GetSubjects",
                        data: jsonData,
                        type: "POST",
                        success: function (response) {
                            debugger;
                            //event.preventDefault();
                            $("#SubjectId").empty();
                            var options = "<option >Select...</option>";
                            $.each(response,
                                function (key, subject) {
                                    options += "<option value='" + subject.Id + "'>" + subject.SubjectName + "</option>";
                                });
                            $("#SubjectId").append(options);
                        },
                        error: function (response) {

                        }

                    });

            });

        $('#btnSubmit').click(function () {
            debugger;
            var studentId = $("#StudentId").val();
            var subjectId = $("#SubjectId").val();
            $.ajax(
                {
                    url: "/ExamResults/Create",
                    cache: false,
                    data: { StudentId: studentId, SubjectId: subjectId },
                    type: "POST",
                    success: function (response) {
                        debugger;
                        //event.preventDefault();
                        window.location.href = "/ExamResults/Index";
                    },
                    error: function (response) {

                    }

                });

        });
        var Manager = {
            //LoadSubjectDDL: function () {
            //    debugger;
            //    var jsonParam = { StudentId: $("#StudentId").val() };
            //    var serviceURL = "/SubjectAssign/GetSubjects/";
            //    AjaxManager.SendJson(serviceURL, jsonParam, onSuccess, onFailed);

            //    function onSuccess(jsonData) {
            //        var objProgram = jsonData;
            //        AjaxManager.populateCombo('SubjectId', objProgram, 'Select one');
            //        $("#SubjectId").chosen();
            //    }

            //    function onFailed(error) {
            //        window.alert(error.statusText);
            //    }
            //}

        }
    </script>
}
